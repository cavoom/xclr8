"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertUserInputToFilterValue = exports.getSampleTemplatesFromS3 = void 0;
const httpClient = __importStar(require("../../clients/http-client"));
const constants_1 = require("../../utils/constants");
const _1 = require(".");
function getSampleTemplatesFromS3(doDebug) {
    return new Promise((resolve, reject) => {
        const params = {
            url: constants_1.TEMPLATES.TEMPLATE_S3_SOURCE_URL,
            method: constants_1.HTTP_REQUEST.VERB.GET,
        };
        httpClient.request(params, "TEMPLATE_S3_SOURCE_URL", doDebug, (error, response) => {
            var _a;
            if (error || ((error === null || error === void 0 ? void 0 : error.statusCode) && (error === null || error === void 0 ? void 0 : error.statusCode) !== 200)) {
                const msg = doDebug
                    ? "Failed to retrieve the skill sample templates."
                    : "Failed to retrieve the skill sample templates. Please run again with --debug to see the details.";
                return reject(new Error(msg));
            }
            resolve((_a = response === null || response === void 0 ? void 0 : response.body) === null || _a === void 0 ? void 0 : _a.templates);
        });
    });
}
exports.getSampleTemplatesFromS3 = getSampleTemplatesFromS3;
function convertUserInputToFilterValue(inputValue) {
    switch (inputValue.toLowerCase()) {
        case _1.MODELING_STACK_IM.toLowerCase():
            return "im";
        case _1.MODELING_STACK_AC.toLowerCase():
            return "ac";
        case _1.CODE_LANGUAGE_NODEJS.toLowerCase():
            return "node";
        case _1.CODE_LANGUAGE_PYTHON.toLowerCase():
            return "python";
        case _1.CODE_LANGUAGE_JAVA.toLowerCase():
            return "java";
        case constants_1.DEPLOYER_TYPE.LAMBDA.NAME.toLowerCase():
            return "lambda";
        case constants_1.DEPLOYER_TYPE.CFN.NAME.toLowerCase():
            return "cfn";
        case constants_1.DEPLOYER_TYPE.HOSTED.NAME.toLowerCase():
            return "hosted";
        case constants_1.DEPLOYER_TYPE.SELF_HOSTED.NAME.toLowerCase():
            return "self";
        default:
            throw new Error(`Unable to convert userInput '${inputValue}' to a sample template filter value.`);
    }
}
exports.convertUserInputToFilterValue = convertUserInputToFilterValue;
