"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Decompile = void 0;
const path = require("path");
const validate_1 = require("../validate");
const project_config_1 = require("../project-config");
const project_1 = require("../project");
const error_1 = require("../error");
const decompile_1 = require("../decompile");
const transformUIProject_1 = require("../transformUIProject");
class Decompile {
    static async decompile(rootDir, outDir, profile) {
        const project = (0, project_1.loadProjectSync)((0, project_config_1.loadProjectConfigSync)(rootDir, profile));
        console.info("************ Decompiling Skill ************");
        console.info(`Skill package directory: ${project.config.sourceRootDir}`);
        // TODO: set isSkill to true when brazil pkg get updated with the fix
        const errors = (0, validate_1.validateProject)(project, true);
        // Traditionally only Syntax errors block decompilation to enable addressing any issues in acdl instead of askir
        // A UI skill with multiple locales must be decompiled with skip-validation currently for the following reasons:
        //   1) transformUIProjectForDecompile is called after validation. Before we move transformUIProjectForDecompile to
        //   before validation we must ensure transformUIProjectForDecompile does not change files in the File System. Changes to files
        //   like the ones done in flattenDirectoryAndChangeFileNames called from transformUIProjectForDecompile must be done
        //   initially in memory and, if validation passes, in the File System.
        //   2) Even if transformUIProjectForDecompile is called before validation there are still a few syntax errors to be investigated
        //   that go away if decompiled with skip-validation and then compiled
        const syntaxErrors = errors.filter((e) => e.code.category === "SyntaxError");
        if (syntaxErrors.length > 0) {
            (0, error_1.logProjectErrors)(syntaxErrors);
            throw new Error(`Decompilation Failed.`);
        }
        // A UI Skill with multiple locales
        const uiSkillInformation = (0, transformUIProject_1.getUISkillInformation)(project.sourceModules);
        let projectToDecompile = project;
        if (uiSkillInformation.isUISkill) {
            projectToDecompile = await (0, transformUIProject_1.transformUIProjectForDecompile)(project, uiSkillInformation.localesUsed);
        }
        const files = await (0, decompile_1.decompileProject)(projectToDecompile);
        files.forEach((file) => {
            const relativePath = path.relative(process.cwd(), file);
            const outFile = (0, decompile_1.getDecompiledOutFilePath)(relativePath, outDir);
            console.info(`${relativePath} => ${outFile}`);
        });
        console.info("Decompiled Skill Artifacts successfully.");
    }
}
exports.Decompile = Decompile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVjb21waWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FjYy9EZWNvbXBpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRTdCLDBDQUE0QztBQUM1QyxzREFBd0Q7QUFDeEQsd0NBQTJDO0FBQzNDLG9DQUEwQztBQUMxQyw0Q0FBd0U7QUFDeEUsOERBQTRGO0FBRTVGLE1BQWEsU0FBUztJQUNwQixNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxPQUFlLEVBQUUsTUFBMEIsRUFBRSxPQUFlO1FBQ2pGLE1BQU0sT0FBTyxHQUFHLElBQUEseUJBQWUsRUFBQyxJQUFBLHNDQUFxQixFQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3pFLE9BQU8sQ0FBQyxJQUFJLENBQUMsNkNBQTZDLENBQUMsQ0FBQztRQUM1RCxPQUFPLENBQUMsSUFBSSxDQUFDLDRCQUE0QixPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7UUFDekUscUVBQXFFO1FBQ3JFLE1BQU0sTUFBTSxHQUFHLElBQUEsMEJBQWUsRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFOUMsZ0hBQWdIO1FBQ2hILGdIQUFnSDtRQUNoSCxtSEFBbUg7UUFDbkgsK0hBQStIO1FBQy9ILHFIQUFxSDtRQUNySCx1RUFBdUU7UUFDdkUsaUlBQWlJO1FBQ2pJLHNFQUFzRTtRQUN0RSxNQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsS0FBSyxhQUFhLENBQUMsQ0FBQztRQUM3RSxJQUFJLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLElBQUEsd0JBQWdCLEVBQUMsWUFBWSxDQUFDLENBQUM7WUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1NBQzFDO1FBRUQsbUNBQW1DO1FBQ25DLE1BQU0sa0JBQWtCLEdBQUcsSUFBQSwwQ0FBcUIsRUFBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDeEUsSUFBSSxrQkFBa0IsR0FBRyxPQUFPLENBQUM7UUFDakMsSUFBSSxrQkFBa0IsQ0FBQyxTQUFTLEVBQUU7WUFDaEMsa0JBQWtCLEdBQUcsTUFBTSxJQUFBLG1EQUE4QixFQUFDLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUNwRztRQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBQSw0QkFBZ0IsRUFBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3pELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRTtZQUM3QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN4RCxNQUFNLE9BQU8sR0FBRyxJQUFBLG9DQUF3QixFQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztZQUMvRCxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsWUFBWSxPQUFPLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDaEQsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsSUFBSSxDQUFDLDBDQUEwQyxDQUFDLENBQUM7SUFDM0QsQ0FBQztDQUNGO0FBckNELDhCQXFDQyJ9