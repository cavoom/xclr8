import { SmapiClient } from "../smapi";
import { AskCliConfig } from "../ask-cli-config";
export declare class CompileZipAndDeploy {
    /**
     * Compiles skill or reusable component. Will also zip the compiled ASKIR skill output if the
     * command is "package" or "deploy" and deploy the skill if the command is deploy
     * @param skipValidation true to skip validation
     * @param profileName profile name from a call to ProfileNameGetter.getProfileName
     * @param skillId skill id used if command is deploy
     * @param command compilation command which is either "" "deploy". "package" or "compile"
     */
    static compileZipAndDeploy(skipValidation: boolean, profileName: string, skillId: string, command: string, askCliConfig: AskCliConfig): Promise<void>;
    static initSmapi(profileName: string, askCliConfig: AskCliConfig): Promise<SmapiClient>;
    /**
     * Removes a directory recursively
     * @param directoryPath path to clean
     */
    private static cleanDirectory;
    /**
     * Validates the project terminating on error
     * @param skipValidation true if we should skip validations
     * @param project Project loaded with loadProject
     * @param isSkill true when validating a skill, false when validating a reusable component
     */
    private static validateAndTerminateOnErrors;
    /**
     *  When there are errors (as opposed to just warnings) log the errors
     *  and terminates the process
     * @param errors errors to check
     */
    private static logAndTerminateOnError;
    /**
     * Deploys the skill
     * @param profileName profile name
     * @param skillId skill id
     * @param skillPackageZip contents to be deployed
     */
    private static deploy;
}
//# sourceMappingURL=CompileZipAndDeploy.d.ts.map