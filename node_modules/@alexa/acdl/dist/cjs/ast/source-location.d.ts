export interface FileLocation extends SourceLocation {
    uri: string;
}
/**
 * Represents the Location of some text in a Source document.
 */
export interface SourceLocation {
    begin: SourcePosition;
    end: SourcePosition;
}
/**
 * Represents the Position (line and character) in a Document.
 */
export interface SourcePosition {
    line: number;
    character: number;
}
export declare function appendLocation(location: SourceLocation, num: number | SourceLocation): SourceLocation;
export declare function betweenLocations(left: SourceLocation, right: SourceLocation): SourceLocation;
export declare function locationContains(location: SourceLocation, position: SourcePosition, inclusive?: boolean): boolean;
/**
 * Returns true if `b` is after `a`.
 */
export declare function isAfter(a: SourcePosition, b: SourcePosition): boolean;
/**
 * Returns true if `b` is before `a`.
 */
export declare function isBefore(a: SourcePosition, b: SourcePosition, inclusive?: boolean): boolean;
//# sourceMappingURL=source-location.d.ts.map