import { ConditionScope, When } from "./condition";
import { Expression } from "./expression";
import { Import } from "./import";
import { Module } from "./module";
import { Block } from "./block";
import { SampleScope } from "./sample";
import { Argument } from "./argument";
import { TypeParameter, TypeProperty, TypeReference } from "./type";
import { Name } from "./name";
import { ListLiteral, ListItem } from "./list-literal";
import { Utterance } from "./utterance";
import { ResponseTemplate } from "./response-template";
import { SlotType } from "./slot-type";
import { EnumItem } from "./enum";
import { Annotation } from "./annotation";
import { InteractionScope } from "./interaction";
import { Correction, CorrectionScope } from "./correction";
export declare function isNode(a: any): a is Node;
export type Node = Argument | Annotation | ConditionScope | Correction | When | Expression | EnumItem | Import | ListLiteral | ListItem | Module | Name | SampleScope | Block | TypeParameter | TypeReference | TypeProperty | Utterance | InteractionScope | CorrectionScope | ResponseTemplate | SlotType;
//# sourceMappingURL=node.d.ts.map