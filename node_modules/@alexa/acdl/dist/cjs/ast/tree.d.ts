import type { Correction } from "./correction";
import type { DialogDeclaration } from "./dialog";
import type { Module } from "./module";
import type { Node } from "./node";
import type { Sample } from "./sample";
import type { SourceLocation } from "./source-location";
export declare class Tree<Kind extends string = string, Context extends Node | undefined = Node | undefined, Previous extends Node | undefined = Node | undefined, Next extends Node | undefined = Node | undefined> {
    readonly kind: Kind;
    readonly loc: SourceLocation | undefined;
    /**
     * Surrounding Context in which this node is found.
     */
    context: Context;
    /**
     * Pointer to the Node that came before this one in a block sequence.
     *
     * This is only set for nodes in a Scope.
     */
    previous?: Previous;
    /**
     * Pointer to the Node that came after this one in a block sequence.
     *
     * This is only set for nodes in a Scope.
     */
    next?: Next;
    constructor(kind: Kind, loc: SourceLocation | undefined);
    /**
     * The URI this tree node is contained within.
     */
    get uri(): string | undefined;
    /**
     * Pretty Print this Node.
     *
     * @param level indentation level
     */
    toString(level?: number): string;
    printHierarchy(): string[];
    setAsParentOn(t: Tree<string, any> | (Tree<string, any> | undefined)[] | undefined): void;
    findInContext<T extends Node | undefined>(match: (node: Node | undefined) => node is T): T | undefined;
    /**
     * Find the Sample an expression came from.
     *
     * @param scope expression scope to find the containing module of
     */
    getDialog(): DialogDeclaration | undefined;
    /**
     * Find the Sample an expression came from.
     */
    getSample(): Sample | undefined;
    /**
     * Find the Module or ACDL file an expression came from.
     */
    getModule(): Module | undefined;
    /**
     * Find the nearest Correction in this Node's context.
     */
    getCorrection(): Correction | undefined;
}
//# sourceMappingURL=tree.d.ts.map