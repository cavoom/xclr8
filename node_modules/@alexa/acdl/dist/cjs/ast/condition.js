"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.When = exports.Condition = exports.ElseScope = exports.ThenScope = exports.isCondition = void 0;
const block_1 = require("./block");
const guard_1 = require("./guard");
const tree_1 = require("./tree");
/**
 * Check if a value is a Condition.
 */
exports.isCondition = (0, guard_1.guard)("Condition");
class ThenScope extends block_1.Block {
}
exports.ThenScope = ThenScope;
class ElseScope extends block_1.Block {
}
exports.ElseScope = ElseScope;
/**
 * A branch in a Condition block.
 */
class Condition extends tree_1.Tree {
    constructor(
    /**
     * Condition to branch on. Expressions are only considered if this is true.
     */
    when, 
    /**
     * Block of sample expressions for when the condition is true.
     */
    then, 
    /**
     * Block of samples to consider if the condition is false.
     */
    _else, annotations, loc) {
        super("Condition", loc);
        Object.defineProperty(this, "when", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: when
        });
        Object.defineProperty(this, "then", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: then
        });
        Object.defineProperty(this, "annotations", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: annotations
        });
        Object.defineProperty(this, "else", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.else = _else;
        this.setAsParentOn(when);
        this.setAsParentOn(then);
        this.setAsParentOn(_else);
        this.setAsParentOn(annotations);
    }
    clone() {
        var _a, _b, _c, _d;
        return new Condition((_a = this.when) === null || _a === void 0 ? void 0 : _a.clone(), (_b = this.then) === null || _b === void 0 ? void 0 : _b.clone(), (_c = this.else) === null || _c === void 0 ? void 0 : _c.clone(), (_d = this.annotations) === null || _d === void 0 ? void 0 : _d.map((a) => a.clone()), this.loc);
    }
}
exports.Condition = Condition;
class When extends tree_1.Tree {
    constructor(expression) {
        super("When", expression === null || expression === void 0 ? void 0 : expression.loc);
        Object.defineProperty(this, "expression", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: expression
        });
        this.setAsParentOn(expression);
    }
    clone() {
        var _a;
        return new When((_a = this.expression) === null || _a === void 0 ? void 0 : _a.clone());
    }
}
exports.When = When;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FzdC9jb25kaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsbUNBQThCO0FBQzlCLG1DQUE4QjtBQUk5QixpQ0FBNEI7QUFJNUI7O0dBRUc7QUFDVSxRQUFBLFdBQVcsR0FBRyxJQUFBLGFBQUssRUFBQyxXQUFXLENBQUMsQ0FBQztBQVE5QyxNQUFhLFNBQVUsU0FBUSxhQUFxQztDQUFHO0FBQXZFLDhCQUF1RTtBQUN2RSxNQUFhLFNBQVUsU0FBUSxhQUFxQztDQUFHO0FBQXZFLDhCQUF1RTtBQUV2RTs7R0FFRztBQUNILE1BQWEsU0FBVSxTQUFRLFdBQWtDO0lBRy9EO0lBQ0U7O09BRUc7SUFDTSxJQUFXO0lBQ3BCOztPQUVHO0lBQ00sSUFBNEI7SUFDckM7O09BRUc7SUFDSCxLQUE2QixFQUNwQixXQUEwQixFQUNuQyxHQUFnQztRQUVoQyxLQUFLLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDOzs7OzttQkFaZjs7Ozs7O21CQUlBOzs7Ozs7bUJBS0E7O1FBZlg7Ozs7O1dBQTBCO1FBbUJ4QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNsQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFTSxLQUFLOztRQUNWLE9BQU8sSUFBSSxTQUFTLENBQ2xCLE1BQUEsSUFBSSxDQUFDLElBQUksMENBQUUsS0FBSyxFQUFFLEVBQ2xCLE1BQUEsSUFBSSxDQUFDLElBQUksMENBQUUsS0FBSyxFQUFFLEVBQ2xCLE1BQUEsSUFBSSxDQUFDLElBQUksMENBQUUsS0FBSyxFQUFFLEVBQ2xCLE1BQUEsSUFBSSxDQUFDLFdBQVcsMENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FDVCxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBcENELDhCQW9DQztBQUVELE1BQWEsSUFBSyxTQUFRLFdBQXVCO0lBQy9DLFlBQXFCLFVBQTRDO1FBQy9ELEtBQUssQ0FBQyxNQUFNLEVBQUUsVUFBVSxhQUFWLFVBQVUsdUJBQVYsVUFBVSxDQUFFLEdBQUcsQ0FBQyxDQUFDOzs7OzttQkFEWjs7UUFFbkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sS0FBSzs7UUFDVixPQUFPLElBQUksSUFBSSxDQUFDLE1BQUEsSUFBSSxDQUFDLFVBQVUsMENBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQ0Y7QUFURCxvQkFTQyJ9