import { Name } from "./name";
import { SourceLocation } from "./source-location";
import { Tree } from "./tree";
import { Annotation } from "./annotation";
/**
 * Represents an enum type declaration.
 * ```acdl
 * enum Locale {
 *   en_US
 *   de_DE
 * }
 * ```
 */
export declare class EnumDeclaration extends Tree<"EnumDeclaration"> {
    #private;
    /**
     * Name of the Enum Type, e.g. `org.example.Locale`.
     */
    readonly name: Name | undefined;
    /**
     * List of items in this Enum Type.
     */
    readonly items: EnumItem[] | undefined;
    /**
     * Annotations attached to this Enum Declaration.
     */
    readonly annotations: Annotation[] | undefined;
    readonly comment?: string | undefined;
    constructor(
    /**
     * Name of the Enum Type, e.g. `org.example.Locale`.
     */
    name: Name | undefined, 
    /**
     * List of items in this Enum Type.
     */
    items: EnumItem[] | undefined, 
    /**
     * Annotations attached to this Enum Declaration.
     */
    annotations: Annotation[] | undefined, comment?: string | undefined, loc?: SourceLocation | undefined);
    /**
     * Map of Name to EnumItem.
     *
     * Values are lazily computed to preserve memory.
     */
    get itemsIndex(): EnumItems | undefined;
    clone(): this;
}
/**
 * Map of enum item name
 */
export interface EnumItems {
    [itemName: string]: EnumItem;
}
/**
 * Tree ndoe to represent an EnumItem.
 */
export declare class EnumItem extends Tree<"EnumItemDeclaration", EnumDeclaration> {
    /**
     * Name of the Enum Item, e.g. `en_US` in:
     * ```acdl
     * enum Locale {
     *   en_US
     * }
     * ```
     */
    readonly name: Name | undefined;
    /**
     * Annotations attached to this Enum Item Declaration.
     */
    readonly annotations: Annotation[] | undefined;
    readonly comment?: string | undefined;
    constructor(
    /**
     * Name of the Enum Item, e.g. `en_US` in:
     * ```acdl
     * enum Locale {
     *   en_US
     * }
     * ```
     */
    name: Name | undefined, 
    /**
     * Annotations attached to this Enum Item Declaration.
     */
    annotations: Annotation[] | undefined, comment?: string | undefined, loc?: SourceLocation | undefined);
    clone(): this;
}
//# sourceMappingURL=enum.d.ts.map