"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tree = void 0;
class Tree {
    constructor(kind, loc) {
        Object.defineProperty(this, "kind", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: kind
        });
        Object.defineProperty(this, "loc", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: loc
        });
        /**
         * Surrounding Context in which this node is found.
         */
        Object.defineProperty(this, "context", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Pointer to the Node that came before this one in a block sequence.
         *
         * This is only set for nodes in a Scope.
         */
        Object.defineProperty(this, "previous", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Pointer to the Node that came after this one in a block sequence.
         *
         * This is only set for nodes in a Scope.
         */
        Object.defineProperty(this, "next", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
    /**
     * The URI this tree node is contained within.
     */
    get uri() {
        var _a;
        return (_a = this.getModule()) === null || _a === void 0 ? void 0 : _a.uri;
    }
    /**
     * Pretty Print this Node.
     *
     * @param level indentation level
     */
    toString(level = 0) {
        return `${this.kind}(\n${indent(level)}${Object.entries(this)
            .map(([name, value]) => {
            if (name === "previous") {
            }
            else if (name === "context") {
                return `${indent(level)}context = ${this.printHierarchy().join("->")}`;
            }
            else if (name === "loc") {
            }
            else if (Array.isArray(value)) {
                return `${indent(level)}${name} = [\n${indent(level)}${value
                    .map((v) => indent(level + 1) + v.toString(level + 2))
                    .join(`,\n${indent(level)}`)}\n${indent(level)}]`;
            }
            else if (typeof value !== "function") {
                return `${indent(level)}${name} = ${typeof value === "object" ? value.toString(level + 1) : typeof value === "string" ? `"${value}"` : "null"}`;
            }
            return undefined;
        })
            .filter((s) => s !== undefined)
            .join(`,\n${indent(level)}`)})`;
    }
    printHierarchy() {
        var _a;
        return [this.kind, ...(((_a = this.context) === null || _a === void 0 ? void 0 : _a.printHierarchy()) || [])];
    }
    setAsParentOn(t) {
        if (t !== undefined) {
            if (Array.isArray(t)) {
                for (const i of t) {
                    if (i !== undefined) {
                        i.context = this;
                    }
                }
            }
            else {
                t.context = this;
            }
        }
    }
    findInContext(match) {
        let curr = this;
        while (curr !== undefined) {
            if (match(curr)) {
                return curr;
            }
            curr = curr.context;
        }
        return undefined;
    }
    /**
     * Find the Sample an expression came from.
     *
     * @param scope expression scope to find the containing module of
     */
    getDialog() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "DialogDeclaration");
    }
    /**
     * Find the Sample an expression came from.
     */
    getSample() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Sample");
    }
    /**
     * Find the Module or ACDL file an expression came from.
     */
    getModule() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Module");
    }
    /**
     * Find the nearest Correction in this Node's context.
     */
    getCorrection() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Correction");
    }
}
exports.Tree = Tree;
function indent(level) {
    return " ".repeat(level);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hc3QvdHJlZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFRQSxNQUFhLElBQUk7SUF5QmYsWUFBcUIsSUFBVSxFQUFXLEdBQStCOzs7OzttQkFBcEQ7Ozs7OzttQkFBcUI7O1FBbkIxQzs7V0FFRztRQUNIOzs7OztXQUFpQjtRQUVqQjs7OztXQUlHO1FBQ0g7Ozs7O1dBQW9CO1FBRXBCOzs7O1dBSUc7UUFDSDs7Ozs7V0FBWTtJQUVnRSxDQUFDO0lBRTdFOztPQUVHO0lBQ0gsSUFBSSxHQUFHOztRQUNMLE9BQU8sTUFBQSxJQUFJLENBQUMsU0FBUyxFQUFFLDBDQUFFLEdBQUcsQ0FBQztJQUMvQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQztRQUN2QixPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7YUFDMUQsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRTtZQUNyQixJQUFJLElBQUksS0FBSyxVQUFVLEVBQUU7YUFDeEI7aUJBQU0sSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO2dCQUM3QixPQUFPLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxhQUFhLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQzthQUN4RTtpQkFBTSxJQUFJLElBQUksS0FBSyxLQUFLLEVBQUU7YUFDMUI7aUJBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUMvQixPQUFPLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksU0FBUyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSztxQkFDekQsR0FB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