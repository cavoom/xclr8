"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionDeclaration = exports.isActionDeclaration = void 0;
const guard_1 = require("./guard");
const tree_1 = require("./tree");
/**
 * Check whether an expression is an `ActionDeclaration`.
 */
exports.isActionDeclaration = (0, guard_1.guard)("ActionDeclaration");
/**
 * This node in AST represents an Action Declaration.
 * <code>
 *     action ReturnType actionName(Type1 arg1, Type2 arg2)
 *     action S actionName&lt;T, S&gt;(Type1 arg1, T arg2)
 * </code>
 */
class ActionDeclaration extends tree_1.Tree {
    constructor(
    /**
     * Name of the Action.
     */
    name, 
    /**
     * List of arguments to action.
     */
    args, 
    /**
     * Return type for the Action.
     *
     * If an action doesn't define an output, it will be set Nothing.
     */
    returnType, 
    /**
     * List of generic arguments in action.
     * <code>action S actionName<T, S>(Type1 arg1, T arg2)</code>
     * T and S are type parameters here.
     */
    genericArguments, 
    /**
     * Annotations attached to this Action Declaration.
     */
    annotations, comment, loc) {
        super("ActionDeclaration", loc);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: name
        });
        Object.defineProperty(this, "returnType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: returnType
        });
        Object.defineProperty(this, "genericArguments", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: genericArguments
        });
        Object.defineProperty(this, "annotations", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: annotations
        });
        Object.defineProperty(this, "comment", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: comment
        });
        /**
         * List of arguments to action.
         */
        Object.defineProperty(this, "arguments", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.arguments = args;
        this.setAsParentOn(name);
        this.setAsParentOn(args);
        this.setAsParentOn(returnType);
        this.setAsParentOn(genericArguments);
        this.setAsParentOn(annotations);
    }
    clone() {
        var _a, _b, _c, _d, _e;
        return new ActionDeclaration((_a = this.name) === null || _a === void 0 ? void 0 : _a.clone(), (_b = this.arguments) === null || _b === void 0 ? void 0 : _b.map((a) => a.clone()), (_c = this.returnType) === null || _c === void 0 ? void 0 : _c.clone(), (_d = this.genericArguments) === null || _d === void 0 ? void 0 : _d.map((a) => a.clone()), (_e = this.annotations) === null || _e === void 0 ? void 0 : _e.map((a) => a.clone()), this.comment, this.loc);
    }
}
exports.ActionDeclaration = ActionDeclaration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FzdC9hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsbUNBQThCO0FBRzlCLGlDQUE0QjtBQUs1Qjs7R0FFRztBQUNVLFFBQUEsbUJBQW1CLEdBQUcsSUFBQSxhQUFLLEVBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUU5RDs7Ozs7O0dBTUc7QUFDSCxNQUFhLGlCQUFrQixTQUFRLFdBQWlDO0lBTXRFO0lBQ0U7O09BRUc7SUFDTSxJQUFXO0lBQ3BCOztPQUVHO0lBQ0gsSUFBNEI7SUFDNUI7Ozs7T0FJRztJQUNNLFVBQTBCO0lBQ25DOzs7O09BSUc7SUFDTSxnQkFBa0M7SUFDM0M7O09BRUc7SUFDTSxXQUEwQixFQUMxQixPQUFnQixFQUN6QixHQUFvQjtRQUVwQixLQUFLLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLENBQUM7Ozs7O21CQXhCdkI7Ozs7OzttQkFVQTs7Ozs7O21CQU1BOzs7Ozs7bUJBSUE7Ozs7OzttQkFDQTs7UUE5Qlg7O1dBRUc7UUFDSDs7Ozs7V0FBMkM7UUErQnpDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFTSxLQUFLOztRQUNWLE9BQU8sSUFBSSxpQkFBaUIsQ0FDMUIsTUFBQSxJQUFJLENBQUMsSUFBSSwwQ0FBRSxLQUFLLEVBQUUsRUFDbEIsTUFBQSxJQUFJLENBQUMsU0FBUywwQ0FBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUNyQyxNQUFBLElBQUksQ0FBQyxVQUFVLDBDQUFFLEtBQUssRUFBRSxFQUN4QixNQUFBLElBQUksQ0FBQyxnQkFBZ0IsMENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFDNUMsTUFBQSxJQUFJLENBQUMsV0FBVywwQ0FBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUN2QyxJQUFJLENBQUMsT0FBTyxFQUNaLElBQUksQ0FBQyxHQUFHLENBQ0QsQ0FBQztJQUNaLENBQUM7Q0FDRjtBQXRERCw4Q0FzREMifQ==