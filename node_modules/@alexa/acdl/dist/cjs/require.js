"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveRequirePath = void 0;
const path_1 = __importDefault(require("path"));
const resolve_1 = __importDefault(require("resolve"));
const ast_1 = require("./ast");
const util_1 = require("./util");
;
/**
 *
 * @param apply
 */
function resolveRequirePath(apply) {
    var _a, _b, _c;
    const name = (_a = apply.decl.name) === null || _a === void 0 ? void 0 : _a.name;
    const { checker } = apply;
    if (name === ast_1.AlexaConversations.apl || name === ast_1.AlexaConversations.apla) {
        const pathArg = (_b = apply.getArguments()) === null || _b === void 0 ? void 0 : _b.path;
        if (((_c = pathArg === null || pathArg === void 0 ? void 0 : pathArg.value) === null || _c === void 0 ? void 0 : _c.kind) === "Call") {
            const filePath = pathArg.value.arguments;
            if (typeof filePath === "string") {
                const uri = checker.getUri(apply.call);
                if (uri !== undefined) {
                    try {
                        const foundPath = resolve_1.default.sync(filePath, {
                            basedir: path_1.default.dirname((0, util_1.trimScheme)(uri)),
                        });
                        return foundPath;
                    }
                    catch (err) {
                        console.error(err);
                        return undefined;
                    }
                }
            }
        }
    }
    return undefined;
}
exports.resolveRequirePath = resolveRequirePath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWlyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZXF1aXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3QjtBQUN4QixzREFBOEI7QUFHOUIsK0JBQXlDO0FBQ3pDLGlDQUFrQztBQUVsQyxDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQUMsS0FBWTs7SUFDN0MsTUFBTSxJQUFJLEdBQUcsTUFBQSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksMENBQUUsSUFBSSxDQUFDO0lBQ25DLE1BQU0sRUFBQyxPQUFPLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDeEIsSUFBSSxJQUFJLEtBQUssd0JBQWtCLENBQUMsR0FBRyxJQUFJLElBQUksS0FBSyx3QkFBa0IsQ0FBQyxJQUFJLEVBQUU7UUFDdkUsTUFBTSxPQUFPLEdBQUcsTUFBQSxLQUFLLENBQUMsWUFBWSxFQUFFLDBDQUFFLElBQUksQ0FBQztRQUMzQyxJQUFJLENBQUEsTUFBQSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsS0FBSywwQ0FBRSxJQUFJLE1BQUssTUFBTSxFQUFFO1lBQ25DLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO1lBQ3pDLElBQUksT0FBTyxRQUFRLEtBQUssUUFBUSxFQUFFO2dCQUNoQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxHQUFHLEtBQUssU0FBUyxFQUFFO29CQUNyQixJQUFJO3dCQUNGLE1BQU0sU0FBUyxHQUFHLGlCQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTs0QkFDdkMsT0FBTyxFQUFFLGNBQUksQ0FBQyxPQUFPLENBQUMsSUFBQSxpQkFBVSxFQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQUN2QyxDQUFDLENBQUM7d0JBQ0gsT0FBTyxTQUFTLENBQUM7cUJBQ2xCO29CQUFDLE9BQU8sR0FBRyxFQUFFO3dCQUNaLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7d0JBQ25CLE9BQU8sU0FBUyxDQUFDO3FCQUNsQjtpQkFDRjthQUNGO1NBQ0Y7S0FDRjtJQUNELE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUM7QUF4QkQsZ0RBd0JDIn0=