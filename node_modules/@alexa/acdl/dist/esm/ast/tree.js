export class Tree {
    constructor(kind, loc) {
        Object.defineProperty(this, "kind", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: kind
        });
        Object.defineProperty(this, "loc", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: loc
        });
        /**
         * Surrounding Context in which this node is found.
         */
        Object.defineProperty(this, "context", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Pointer to the Node that came before this one in a block sequence.
         *
         * This is only set for nodes in a Scope.
         */
        Object.defineProperty(this, "previous", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Pointer to the Node that came after this one in a block sequence.
         *
         * This is only set for nodes in a Scope.
         */
        Object.defineProperty(this, "next", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
    /**
     * The URI this tree node is contained within.
     */
    get uri() {
        var _a;
        return (_a = this.getModule()) === null || _a === void 0 ? void 0 : _a.uri;
    }
    /**
     * Pretty Print this Node.
     *
     * @param level indentation level
     */
    toString(level = 0) {
        return `${this.kind}(\n${indent(level)}${Object.entries(this)
            .map(([name, value]) => {
            if (name === "previous") {
            }
            else if (name === "context") {
                return `${indent(level)}context = ${this.printHierarchy().join("->")}`;
            }
            else if (name === "loc") {
            }
            else if (Array.isArray(value)) {
                return `${indent(level)}${name} = [\n${indent(level)}${value
                    .map((v) => indent(level + 1) + v.toString(level + 2))
                    .join(`,\n${indent(level)}`)}\n${indent(level)}]`;
            }
            else if (typeof value !== "function") {
                return `${indent(level)}${name} = ${typeof value === "object" ? value.toString(level + 1) : typeof value === "string" ? `"${value}"` : "null"}`;
            }
            return undefined;
        })
            .filter((s) => s !== undefined)
            .join(`,\n${indent(level)}`)})`;
    }
    printHierarchy() {
        var _a;
        return [this.kind, ...(((_a = this.context) === null || _a === void 0 ? void 0 : _a.printHierarchy()) || [])];
    }
    setAsParentOn(t) {
        if (t !== undefined) {
            if (Array.isArray(t)) {
                for (const i of t) {
                    if (i !== undefined) {
                        i.context = this;
                    }
                }
            }
            else {
                t.context = this;
            }
        }
    }
    findInContext(match) {
        let curr = this;
        while (curr !== undefined) {
            if (match(curr)) {
                return curr;
            }
            curr = curr.context;
        }
        return undefined;
    }
    /**
     * Find the Sample an expression came from.
     *
     * @param scope expression scope to find the containing module of
     */
    getDialog() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "DialogDeclaration");
    }
    /**
     * Find the Sample an expression came from.
     */
    getSample() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Sample");
    }
    /**
     * Find the Module or ACDL file an expression came from.
     */
    getModule() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Module");
    }
    /**
     * Find the nearest Correction in this Node's context.
     */
    getCorrection() {
        return this.findInContext((n) => (n === null || n === void 0 ? void 0 : n.kind) === "Correction");
    }
}
function indent(level) {
    return " ".repeat(level);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hc3QvdHJlZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxNQUFNLE9BQU8sSUFBSTtJQXlCZixZQUFxQixJQUFVLEVBQVcsR0FBK0I7Ozs7O21CQUFwRDs7Ozs7O21CQUFxQjs7UUFuQjFDOztXQUVHO1FBQ0g7Ozs7O1dBQWlCO1FBRWpCOzs7O1dBSUc7UUFDSDs7Ozs7V0FBb0I7UUFFcEI7Ozs7V0FJRztRQUNIOzs7OztXQUFZO0lBRWdFLENBQUM7SUFFN0U7O09BRUc7SUFDSCxJQUFJLEdBQUc7O1FBQ0wsT0FBTyxNQUFBLElBQUksQ0FBQyxTQUFTLEVBQUUsMENBQUUsR0FBRyxDQUFDO0lBQy9CLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksUUFBUSxDQUFDLEtBQUssR0FBRyxDQUFDO1FBQ3ZCLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxNQUFNLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQzthQUMxRCxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ3JCLElBQUksSUFBSSxLQUFLLFVBQVUsRUFBRTthQUN4QjtpQkFBTSxJQUFJLElBQUksS0FBSyxTQUFTLEVBQUU7Z0JBQzdCLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLGFBQWEsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO2FBQ3hFO2lCQUFNLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTthQUMxQjtpQkFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQy9CLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxTQUFTLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLO3FCQUN6RCxH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