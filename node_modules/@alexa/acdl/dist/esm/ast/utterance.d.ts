import { Call } from "./call";
import { Name } from "./name";
import { SourceLocation } from "./source-location";
import { Tree } from "./tree";
export declare const isUtterance: (node: any) => node is Utterance;
/**
 * Represents a parsed Utterance sample
 *
 * ```
 * "hi my name is {name}"
 * ```
 */
export declare class Utterance extends Tree<"Utterance", Call> {
    /**
     * Full text of the utterance sample.
     */
    readonly text: string;
    /**
     * Name references in the utterances sample, e.g. `{name}`.
     */
    readonly names?: Name[] | undefined;
    constructor(
    /**
     * Full text of the utterance sample.
     */
    text: string, 
    /**
     * Name references in the utterances sample, e.g. `{name}`.
     */
    names?: Name[] | undefined, loc?: SourceLocation);
    clone(): Utterance;
}
/**
 * Parse Utterance Names from a piece of text.
 *
 * E.g `i want a {size} pizza with {cheese}` -> ["size", "cheese"]
 *
 * @param text utterance text
 * @returns array of slo
 */
export declare function parseUtteranceSlotNames(text: string): string[] | undefined;
//# sourceMappingURL=utterance.d.ts.map