import { guard } from "./guard";
import { Block } from "./block";
import { Tree } from "./tree";
/**
 * Checks if the expression is a InteractionExpression.
 */
export const isInteractionExpression = guard("Call", "Correction", "NameDeclaration");
/**
 * Definition of InteractionScope
 */
export class InteractionScope extends Block {
}
/**
 * Checks if the expression is a InteractionExpression.
 */
export const isInteractionDeclaration = guard("InteractionDeclaration");
/**
 * Class of InteractionDeclaration
 */
export class InteractionDeclaration extends Tree {
    constructor(
    /**
     * Block of expressions for the interaction
     */
    scope, 
    /**
     * Annotations attached to this Interaction
     */
    annotations, loc) {
        super("InteractionDeclaration", loc);
        Object.defineProperty(this, "scope", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: scope
        });
        Object.defineProperty(this, "annotations", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: annotations
        });
        this.setAsParentOn(scope);
        this.setAsParentOn(annotations);
    }
    clone() {
        var _a, _b;
        return new InteractionDeclaration((_a = this.scope) === null || _a === void 0 ? void 0 : _a.clone(), (_b = this.annotations) === null || _b === void 0 ? void 0 : _b.map((a) => a.clone()), this.loc);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXN0L2ludGVyYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFJOUIsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUM5QixPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBRzVCOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQU90Rjs7R0FFRztBQUNILE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxLQUFvRDtDQUFHO0FBRTdGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFFeEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsSUFBc0M7SUFDaEY7SUFDRTs7T0FFRztJQUNNLEtBQXdCO0lBQ2pDOztPQUVHO0lBQ00sV0FBMEIsRUFDbkMsR0FBb0I7UUFFcEIsS0FBSyxDQUFDLHdCQUF3QixFQUFFLEdBQUcsQ0FBQyxDQUFDOzs7OzttQkFQNUI7Ozs7OzttQkFJQTs7UUFJVCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLEtBQUs7O1FBQ1YsT0FBTyxJQUFJLHNCQUFzQixDQUMvQixNQUFBLElBQUksQ0FBQyxLQUFLLDBDQUFFLEtBQUssRUFBRSxFQUNuQixNQUFBLElBQUksQ0FBQyxXQUFXLDBDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQ3ZDLElBQUksQ0FBQyxHQUFHLENBQ0QsQ0FBQztJQUNaLENBQUM7Q0FDRiJ9