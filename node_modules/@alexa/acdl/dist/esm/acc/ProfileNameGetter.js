const fs = require("fs-extra");
const os = require("os");
const path = require("path");
const __ENVIRONMENT_ASK_PROFILE__ = "__ENVIRONMENT_ASK_PROFILE__";
/**
 * Class that helps to get the name of the current ASK profile
 */
export class ProfileNameGetter {
    /**
     * get the name of the current ASK profile
     * @param profile profile from the command line
     * @returns the name of the current ASK profile
     */
    static getProfileName(profile) {
        const profileName = profile || ProfileNameGetter.getEnvProfile() || process.env.ASK_DEFAULT_PROFILE || "default";
        return profileName;
    }
    /**
     * Returns true if all the needed variables are set or false otherwise
     * @returns __ENVIRONMENT_ASK_PROFILE__ if all the needed variables are set or undefined otherwise
     */
    static isEnvProfile() {
        return !!(process.env.AWS_ACCESS_KEY_ID &&
            process.env.AWS_SECRET_ACCESS_KEY &&
            (process.env.ASK_REFRESH_TOKEN || process.env.ASK_ACCESS_TOKEN) &&
            process.env.ASK_VENDOR_ID);
    }
    /**
     * Returns __ENVIRONMENT_ASK_PROFILE__ if all the needed variables are set or undefined otherwise
     * @returns __ENVIRONMENT_ASK_PROFILE__ if all the needed variables are set or undefined otherwise
     */
    static getEnvProfile() {
        // Only when user set every required parameter in ENV, we will treat profile as ENV
        if (ProfileNameGetter.isEnvProfile()) {
            // Only when user set every required parameter in ENV, we will treat profile as ENV
            return __ENVIRONMENT_ASK_PROFILE__;
        }
        return null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZmlsZU5hbWVHZXR0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYWNjL1Byb2ZpbGVOYW1lR2V0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMvQixNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRTdCLE1BQU0sMkJBQTJCLEdBQUcsNkJBQTZCLENBQUM7QUFFbEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8saUJBQWlCO0lBQzVCOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQTJCO1FBQ3RELE1BQU0sV0FBVyxHQUFHLE9BQU8sSUFBSSxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixJQUFJLFNBQVMsQ0FBQztRQUNqSCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFlBQVk7UUFDeEIsT0FBTyxDQUFDLENBQUMsQ0FDUCxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQjtZQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQjtZQUNqQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQztZQUMvRCxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFRDs7O09BR0c7SUFDSyxNQUFNLENBQUMsYUFBYTtRQUMxQixtRkFBbUY7UUFDbkYsSUFBSSxpQkFBaUIsQ0FBQyxZQUFZLEVBQUUsRUFBRTtZQUNwQyxtRkFBbUY7WUFDbkYsT0FBTywyQkFBMkIsQ0FBQztTQUNwQztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGIn0=